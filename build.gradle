
// Main project (located in app/)
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:3.1.2.RELEASE")
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
}

// Common for all projects
allprojects {
    apply plugin: 'java'

    sourceCompatibility = 17
    targetCompatibility = 17

    repositories {
        mavenCentral()
    }

    dependencies {
        // Prod
        implementation 'org.springframework:spring-context:6.0.11'
        annotationProcessor 'org.projectlombok:lombok:1.18.22'
        compileOnly 'org.projectlombok:lombok:1.18.22'
        implementation 'com.google.code.gson:gson:2.10.1'
        // Test
        testImplementation 'com.github.javafaker:javafaker:1.0.1'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
        testImplementation 'org.mockito:mockito-core:5.4.0'
        testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.2'

    }

    test {
        useJUnitPlatform()

        testLogging {
            events "passed", "skipped", "failed"
        }
    }


    task view_paths {
        doLast { task ->
            println "$task.project.name"
            println "------------------"
            println "   Main: $sourceSets.main.java.srcDirTrees"
            println "   Resources: $sourceSets.main.resources.srcDirTrees"
            println "   Tests: $sourceSets.test.java.srcDirTrees"
            println "   Resources: $sourceSets.test.resources.srcDirTrees"
        }
    }
}


// All subprojects (located in src/*)
subprojects {
    group = "com.app.${rootProject.name}"

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'

        testImplementation rootProject.sourceSets.main.output
        testImplementation 'org.springframework.boot:spring-boot-starter-test'

        //Share with all projects
        if (project.name != "shared") {
            implementation project(":shared")
            testImplementation project(":shared").sourceSets.test.output
        }
    }

    sourceSets {
        main {
            java { srcDirs = ['main'] }
            resources { srcDirs = ['main/resources'] }
        }

        test {
            java { srcDirs = ['test'] }
            resources { srcDirs = ['test/resources'] }
        }
    }
}



sourceSets {
    main {
        java { srcDirs = ['app/main'] }
        resources { srcDirs = ['app/main/resources'] }
    }

    test {
        java { srcDirs = ['app/test'] }
        resources { srcDirs = ['app/test/resources'] }
    }
}



apply plugin: 'application'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

mainClassName = 'com.app.Starter'
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation project(":shared")
    implementation project(":backoffice")
    implementation project(":mooc")

    implementation "org.springframework.boot:spring-boot-starter-test"
}


//Create modules, please configure module in setting gradle before to add it
// Don't forget uncomment the task too
//task setupBackofficeProject {
//    doLast {
//        def backofficeDir = project(':backoffice').projectDir
//
//        file("${backofficeDir}/main/com/app").mkdirs()
//        file("${backofficeDir}/test/com/app").mkdirs()
//
//        def backofficeDir2 = project(':mooc').projectDir
//
//        file("${backofficeDir2}/main/com/app").mkdirs()
//        file("${backofficeDir2}/test/com/app").mkdirs()
//
//        def backofficeDir3 = project(':shared').projectDir
//
//        file("${backofficeDir3}/main/com/app").mkdirs()
//        file("${backofficeDir3}/test/com/app").mkdirs()
//    }
//}

//tasks.named('build').configure {
//    dependsOn setupBackofficeProject
//}







